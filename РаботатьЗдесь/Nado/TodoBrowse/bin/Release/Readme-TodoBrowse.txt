Файл Readme для приложения TodoBrowse.
Copyright (C) Селяков Павел 2021г.
  
Приложение TodoBrowse предназначено для поиска в текстовых файлах задач, отмеченных тегами тодо: todo: и подобными.

Применение:
Это приложение помогает превращать туманные и расплывчатые намерения в реальность. 
Сначала надо описать текстом тему и проблемы.
Затем надо запустить функцию Поиск надо. 
Затем последовательно переработать найденные элементы в тодо-задачи.
Затем тодо-задачи надо выполнять.
Таким образом, желаемое становится реальностью.

Если требуемая работа сводится только(!) к текстам, то лучше использовать Википад (wikidPad). 
 Там все записи будет удобно организовать и картинки добавить.
Но если работа это разработка софта или электроники, где много файлов организовано в собственные структуры каталогов.
То вики-записи туда плохо вписываются. 
Документация работы обычно существует в виде разбросанных там и тут текстовых файлов с заметками и задачами по разным темам.
Их надо просматривать последовательно, отслеживая записанные задачи.
Вот это приложение собирает все задачи в один список со ссылками на документ, где задачи описаны.
 В том числе, собирает задачи из Википада, ВижуалСтудио итп. 

 Приложение игнорирует файлы без расширений, которые приняты в Линукс.


Настройки:
Сейчас предполагается, что пользователь самостоятельно настроит приложение в процессе использования.
Начальные настройки уже внесены, но пользователь имет возможность приспособить их под свои обстоятельства.

Файл настроек приложения TodoBrowse.exe.config располагается в каталоге приложения.
* Поле setting name="ReadFileExts" перечислить расширения обрабатываемых файлов через пробел. Регистр символов не имеет значения. 
  Пример: .txt .md .cs .c .cpp .h .hpp .wiki
* Поле setting name="TodoTags" перечислить тексты тегов тодо-задач через пробел. Регистр символов имеет значение. 
  Пример: todo TODO done DONE question QUESTION надо НАДО тодо ТОДО вопрос ВОПРОС
* Поле setting name="NadoTags" перечислить тексты тегов надо-задач через пробел. Регистр символов не имеет значения.
  Пример: надо
* Поле setting name="LastFolder" путь к последнему использованному каталогу. Регистр символов не имеет значения.
  Пример: c:\
* Поле setting name="NumOfCharsBeforeNado" - число выводимых символов текста перед тегом "надо". 
  Пример: 48
* Поле setting name="NumOfCharsAfterNado" - число выводимых символов текста после тега "надо".      
  Пример: 128
* Поле setting name="DefaultEncoding" - кодировка текстовых файлов, применяемая по умолчанию, если не удалось определить кодировку.
  Пример: windows-1251 для русского виндовс, utf-8, utf-16 для Юникода виндовс.
  Другие варианты:  https://msdn.microsoft.com/EN-US/library/86hf4sb8(v=VS.90,d=hv.2).aspx 
  
Функции:
1. Поиск надо 
Приложение ищет в указанном пользователем каталоге и подкаталогах файлы, имеющие определенное в настройке ReadFileExts расширение.
Затем просматривает отобранные файлы и отображает на экране все случаи употребления тегов из настройки NadoTags - обычно это волшебное слово "надо".
Пользователь затем должен самостоятельно переработать эти случаи в задачи, отметив их тегами todo:
Обычно требуется значительно переработать текст, чтобы выделить из этого облака семантики задачу и четко ее сформулировать.
И много встречается случаев, когда из "надо" нельзя сделать тодо-задачу.
Это работа семантически сложная и пользователь быстро устает. За один подход к компьютеру все не сделаешь.
- Кодировку текстовых файлов программа определяет самостоятельно. 
  Если определить кодировку не удалось, используется кодировка windows-1251.
  Если кодировка файла была определена неправильно, задачи из такого файла не будут извлечены и показаны в общем списке задач.

2. Поиск тодо
Приложение ищет в указанном пользователем каталоге и подкаталогах файлы, имеющие определенное в настройке ReadFileExts расширение.
Затем просматривает отобранные файлы и отображает на экране все случаи употребления тегов из настройки TodoTags.
Пользователь затем должен просмотреть выведенный список задач, выбрать одну задачу попроще, открыть документ кликом по ссылке и отважно приступить к ее выполнению.
Обычно в процессе работы одна задача превращается в пять-восемь задач помельче. 
Необходимо(!) все эти задачи описать текстом прямо на месте возникновения. 
 И пометить тегами тодо-задач, чтобы при следующем поиске задач они были выведены на экран. 
Это работа семантически сложная и пользователь быстро устает. 
 Поэтому следует брать по одной задаче за раз, делать по три задачи в день. 
 Поэтому важно описывать все(!) возникающие задачи и помечать их тодо-тегами.
- Кодировку текстовых файлов программа определяет самостоятельно. 
  Если определить кодировку не удалось, используется кодировка windows-1251.
  Если кодировка файла была определена неправильно, задачи из такого файла не будут извлечены и показаны в общем списке задач. 
 
3. Сохранить как - TODO: пока не реализован!
Приложение сохраняет содержимое своего окна в файле, что позволяет пользователю затем последовательно работать по найденным задачам без приложения.
Ограничения:
* ссылки на вики-страницы не работают или работают неправильно. Это потому, что wikiDpad написал на Python какой-то Deutschman кроссплатформенно, и тут все должно быть ясно.
* TODO: добавить сюда ограничения по мере обнаружения...  

  
Формат тодо-задачи:
* Начинается с тега, затем двоеточие, затем описание задачи, затем символ завершения точка или вопросительный знак или восклицательный знак или перевод строки.
* Обычная форма: "todo: описание задачи" или "сделать: описание задачи." 
   * Кавычки " тут используются только для выделения тодо-задачи, и в документе не нужны!
* Расширенная форма: "todo.важно.срочно: описание важной срочной задачи.". Только первая часть такого составного тодо должна быть прописана в настройке TodoTags.


